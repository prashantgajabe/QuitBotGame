{"version":3,"file":"ngx-encrypt-cookie.js","sources":["ng://ngx-encrypt-cookie/lib/ngx-encrypt-cookie.service.ts"],"sourcesContent":["import { Injectable, Inject, PLATFORM_ID, InjectionToken } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NgxEncryptCookieService {\r\n  private readonly documentIsAccessible: boolean;\r\n\r\n  constructor(\r\n\r\n    @Inject(PLATFORM_ID) private platformId: InjectionToken<object>\r\n  ) {\r\n\r\n    this.documentIsAccessible = isPlatformBrowser(this.platformId);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * @param keySize Cookie name\r\n   * @param passPhrase secret passPhrase \r\n   * @returns returns key when setting cookie and getting cookie\r\n   * default keySize is 128/32 and default passPhrase is \"Secret PassPhrase\"\r\n   */\r\n  generateKey(keySize?: string, passPhrase?: string) {\r\n\r\n    var salt = CryptoJS.lib.WordArray.random(128 / 8);\r\n    var keySizeBytes;\r\n    var secrtePassPhrase;\r\n\r\n    keySize ? keySizeBytes = keySize : keySizeBytes = \"128/32\";\r\n    passPhrase ? secrtePassPhrase = passPhrase : secrtePassPhrase = \"Secret PassPhrase\";\r\n\r\n    switch (keySizeBytes) {\r\n      case \"128/32\": var msg = CryptoJS.PBKDF2(secrtePassPhrase, salt, { keySize: 128 / 32 })\r\n        return msg.toString()\r\n        break;\r\n      case \"256/32\": var msg = CryptoJS.PBKDF2(secrtePassPhrase, salt, { keySize: 256 / 32 })\r\n        return msg.toString()\r\n        break;\r\n      case \"512/32\": var msg = CryptoJS.PBKDF2(secrtePassPhrase, salt, { keySize: 512 / 32 })\r\n        return msg.toString()\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  /** \r\n   * encrypt() is calling when set() calls\r\n   * @param val value to store in cookies\r\n   * @param secret_key is a key generated by using generateKey() or user defined key.\r\n   * @returns encrypted val to set() and there the cookie will set. if user doesnt generateKey or pass key error will be thrown.\r\n  */\r\n  private encrypt(val: String, secret_key: String) {\r\n\r\n    if (secret_key != null || secret_key != \"\" || secret_key.length > 0) {\r\n      var encrypt_msg = CryptoJS.AES.encrypt(val, secret_key);\r\n      return encrypt_msg;\r\n    }\r\n    else {\r\n      console.error(\"Pass Secret key to set cookie\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * \r\n   * @param cookie_name cookie name which is stored\r\n   * @param encrypted boolean - cookie stored having encrypted val or not\r\n   * @param secret_key is key which is used to encrypt cookie val. it is not required if encrypted is false\r\n   */\r\n  private decrypt(cookieName: string, encrypted: boolean, secret_key?: String, ) {\r\n    if (this.documentIsAccessible && this.check(cookieName)) {\r\n      cookieName = encodeURIComponent(cookieName);\r\n\r\n      const regExp: RegExp = this.getCookieRegExp(cookieName);\r\n      const result: RegExpExecArray = regExp.exec(document.cookie);\r\n\r\n      if (encrypted) {\r\n        if (secret_key) {\r\n\r\n          let encrypt_msg = this.safeDecodeURIComponent(result[1]);\r\n          let decrypt_msg = CryptoJS.AES.decrypt(encrypt_msg, secret_key);\r\n          let message = decrypt_msg.toString(CryptoJS.enc.Utf8);\r\n          return message;\r\n\r\n        }\r\n        else {\r\n          console.error(\"pass secret key to get cookie value\")\r\n        }\r\n      }\r\n      else {\r\n        return this.safeDecodeURIComponent(result[1]);\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @param cookieName Cookie name\r\n   * @returns boolean  whether cookie with specified name is existed or not\r\n   */\r\n  check(cookieName: string): boolean {\r\n    if (!this.documentIsAccessible) {\r\n      return false;\r\n    }\r\n\r\n    var name = encodeURIComponent(cookieName);\r\n\r\n    const regExp: RegExp = this.getCookieRegExp(name);\r\n    const exists: boolean = regExp.test(document.cookie);\r\n\r\n    return exists;\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param cookieName cookie name\r\n   * @param encryption boolean - whether to want encrypted or decrypted value. \r\n   * @param key - it should enter if encrypted=true otherwise error will be thrown.key can be either generated using generateKey() or\r\n                   user definded key\r\n   */\r\n  get(cookieName: string, encryption: boolean, key?: string, ): string {\r\n    var val:string;\r\n     if(encryption){\r\n       if(key){\r\n        val = this.decrypt(cookieName, encryption, key);\r\n        return val;\r\n       }\r\n        }\r\n\r\n        // if key is not passed or encrypted = false;\r\n    val = this.decrypt(cookieName,false,null);\r\n    return val;\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * @param encrypted boolean - to know encrypted values are there\r\n   * @param key  generatedKey() or user defined key - to decrypt encrypted values\r\n   * @returns cookies - all the cookies  stored\r\n   */\r\n  getAll(encrypted?: boolean, key?: string): { [key: string]: string } {\r\n    if (!this.documentIsAccessible) {\r\n      return {};\r\n    }\r\n    const cookies: { [key: string]: string } = {};\r\n\r\n    if (encrypted) {\r\n      if (document.cookie && document.cookie !== '') {\r\n\r\n        document.cookie.split(';').forEach((currentCookie) => {\r\n          const [cookieName, cookieValue] = currentCookie.split('=');\r\n          var cookie_name = this.safeDecodeURIComponent(cookieName.replace(/^ /, ''));\r\n          var cookie_val = this.get(cookie_name, encrypted, key)\r\n          cookies[this.safeDecodeURIComponent(cookieName.replace(/^ /, ''))] = cookie_val\r\n          // cookies[]\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      if (document.cookie && document.cookie !== '') {\r\n\r\n        document.cookie.split(';').forEach((currentCookie) => {\r\n          const [cookieName, cookieValue] = currentCookie.split('=');\r\n          var cookie_name = this.safeDecodeURIComponent(cookieName.replace(/^ /, ''));\r\n          cookies[this.safeDecodeURIComponent(cookieName.replace(/^ /, ''))] = this.safeDecodeURIComponent(cookieValue)\r\n          // cookies[]\r\n        });\r\n      }\r\n    }\r\n\r\n    return cookies\r\n  }\r\n\r\n\r\n  private getAllCookies() {\r\n    if (!this.documentIsAccessible) {\r\n      return {};\r\n    }\r\n    const cookies: { [key: string]: string } = {};\r\n\r\n    if (document.cookie && document.cookie !== '') {\r\n\r\n      document.cookie.split(';').forEach((currentCookie) => {\r\n        const [cookieName, cookieValue] = currentCookie.split('=');\r\n        var cookie_name = this.safeDecodeURIComponent(cookieName.replace(/^ /, ''));\r\n        cookies[this.safeDecodeURIComponent(cookieName.replace(/^ /, ''))] = this.safeDecodeURIComponent(cookieValue)\r\n        // cookies[]\r\n      });\r\n    }\r\n\r\n    return cookies\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * @param name     Cookie name\r\n   * @param value    Cookie value\r\n   * @param encrypt  boolean - to encrypt cookie value or not\r\n   * @param key      a key can either generate using generateKey() or user defined key \r\n   * @param expires  Number of days until the cookies expires or an actual `Date`\r\n   * @param path     Cookie path (eg:\"/\")\r\n   * @param domain   Cookie domain (eg:\"domain.com\")\r\n   * @param secure   Secure flag\r\n   * @param sameSite OWASP samesite token `Lax`, `None`, or `Strict`. Defaults to `Lax`\r\n   */\r\n  set(\r\n    name: string,\r\n    value: string,\r\n    encrypt: boolean,\r\n    key?: string,\r\n    expires?: number | Date,\r\n    path?: string,\r\n    domain?: string,\r\n    secure?: boolean,\r\n    sameSite: 'Lax' | 'None' | 'Strict' = 'Lax'\r\n  ): any {\r\n    var cookieString: string;\r\n\r\n    if (!this.documentIsAccessible) {\r\n      return;\r\n    }\r\n\r\n    if (encrypt) {\r\n     if(key){\r\n      let encrypted_msg = this.encrypt(value, key)\r\n      cookieString = encodeURIComponent(name) + '=' + encodeURIComponent(encrypted_msg) + ';';\r\n     }\r\n     else{\r\n       console.error(\"pass key to encrypt cookie value\");\r\n       return \"key fail\";\r\n     }\r\n    }\r\n    else {\r\n      cookieString = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\r\n    }\r\n\r\n    if (expires) {\r\n      if (typeof expires === 'number') {\r\n        const dateExpires: Date = new Date(new Date().getTime() + expires * 1000 * 60 * 60 * 24);\r\n\r\n        cookieString += 'expires=' + dateExpires.toUTCString() + ';';\r\n      } else {\r\n        cookieString += 'expires=' + expires.toUTCString() + ';';\r\n      }\r\n    }\r\n\r\n    if (path) {\r\n      cookieString += 'path=' + path + ';';\r\n    }\r\n\r\n    if (domain) {\r\n      cookieString += 'domain=' + domain + ';';\r\n    }\r\n\r\n    if (secure === false && sameSite === 'None') {\r\n      secure = true;\r\n      console.warn(\r\n        `[ngx-secure-cookies] Cookie ${name} was forced with secure flag because sameSite=None.`);\r\n    }\r\n\r\n    if (secure) {\r\n      cookieString += 'secure;';\r\n    }\r\n\r\n    cookieString += 'sameSite=' + sameSite + ';';\r\n\r\n    document.cookie = cookieString;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @param name   Cookie name\r\n   * @param path   Cookie path\r\n   * @param domain Cookie domain\r\n   */\r\n\r\n  delete(name: string, path?: string, domain?: string, secure?: boolean, sameSite: 'Lax' | 'None' | 'Strict' = 'Lax'): void {\r\n    if (!this.documentIsAccessible) {\r\n      return;\r\n    }\r\n\r\n    this.set(name, '', false, \"\", new Date('Thu, 01 Jan 1970 00:00:01 GMT'), path, domain, secure, sameSite);\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * @param path   Cookie path\r\n   * @param domain Cookie domain\r\n   */\r\n  deleteAll(path?: string, domain?: string, secure?: boolean, sameSite: 'Lax' | 'None' | 'Strict' = 'Lax'): void {\r\n    if (!this.documentIsAccessible) {\r\n      return;\r\n    }\r\n\r\n    const cookies: any = this.getAllCookies();\r\n\r\n    for (const cookieName in cookies) {\r\n      if (cookies.hasOwnProperty(cookieName)) {\r\n        this.delete(cookieName, path, domain, secure, sameSite);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * @param name Cookie name\r\n   * @returns property RegExp\r\n   */\r\n  private getCookieRegExp(name: string): RegExp {\r\n    const escapedName: string = name.replace(/([\\[\\]\\{\\}\\(\\)\\|\\=\\;\\+\\?\\,\\.\\*\\^\\$])/gi, '\\\\$1');\r\n\r\n    return new RegExp('(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g');\r\n  }\r\n\r\n  private safeDecodeURIComponent(encodedURIComponent: string): string {\r\n    try {\r\n      return decodeURIComponent(encodedURIComponent);\r\n    } catch {\r\n      return encodedURIComponent;\r\n    }\r\n  }\r\n}\r\n"],"names":["CryptoJS.lib","CryptoJS.PBKDF2","CryptoJS.AES","CryptoJS.enc"],"mappings":"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"}