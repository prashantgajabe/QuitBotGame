{"version":3,"sources":["./src/app/quiz-ser.service.ts","./src/app/picworddb-ser.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/framework/framework.component.ts","./src/app/framework/framework.component.html","./src/environments/environment.ts","./src/app/picword-play/picword-play.component.ts","./src/app/picword-play/picword-play.component.html","./src/app/mathriddles-ser.service.ts","./src/app/picwordlist-ser.service.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/userbase-ser.service.ts","./src/app/math-play/math-play.component.ts","./src/app/math-play/math-play.component.html","./src/app/quiz-play/quiz-play.component.ts","./src/app/quiz-play/quiz-play.component.html","./src/app/userprogress-ser.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { from } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Quiz } from './quiz';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizSerService {\n  public quizURL = \"http://localhost:3000/api/quiz\";\n\n  constructor( private http:HttpClient ) { }\n  getQuestions() : Promise<void | Quiz[]>{\n    return this.http.get(this.quizURL)\n    .toPromise()\n    .then(response => response as Quiz[])\n    .catch(this.ErrorMethod);\n  }\n  getSingleQuestion(idQuiz: number) : Promise<void | Quiz> {\n    return this.http.get(this.quizURL + '/' + idQuiz)\n                .toPromise()\n                .then(response => response as Quiz)\n                .catch(this.ErrorMethod);\n  }\n  createQuiz(newQuiz: Quiz) : Promise<void | Quiz> {\n    return this.http.post(this.quizURL, newQuiz)\n                .toPromise()\n                .then(response => response as Quiz)\n                .catch(this.ErrorMethod);\n  }\n\n  updateQuiz(idQuiz : number, updateQuiz: Quiz) : Promise<void | Quiz > {\n    return this.http.put(this.quizURL + \"/\" + idQuiz, this.updateQuiz)\n                  .toPromise()\n                  .then(response => response as Quiz)\n                  .catch(this.ErrorMethod);\n  }\n\n  deleteQuiz(idQuiz: number) : Promise<void | Quiz > {\n    return this.http.delete(this.quizURL + \"/\" + idQuiz)\n                  .toPromise()\n                  .then(response => response as Quiz)\n                  .catch(this.ErrorMethod);\n  }\n\n  private ErrorMethod(error: any){\n    console.log(\"something is not working\");\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Picworddb } from './Picworddb';\nimport { from } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PicworddbSerService {\n  public picworddbURL = \"http://localhost:3000/api/picworddb\";\n\n  constructor( private http:HttpClient ) { }\n  getPicQuizzes() : Promise<void | Picworddb[]>{\n    return this.http.get(this.picworddbURL)\n    .toPromise()\n    .then(response => response as Picworddb[])\n    .catch(this.ErrorMethod);\n  }\n  getSinglePicQuiz(PicWordID: number) : Promise<void | Picworddb> {\n    return this.http.get(this.picworddbURL + '/' + PicWordID)\n                .toPromise()\n                .then(response => response as Picworddb)\n                .catch(this.ErrorMethod);\n  }\n  getNextPicQuiz(PicWordID: number) : Promise<void | Picworddb> {\n    return this.http.get(this.picworddbURL + '/next/' + PicWordID)\n                .toPromise()\n                .then(response => response as Picworddb)\n                .catch(this.ErrorMethod);\n  }\n  getPrePicQuiz(PicWordID: number) : Promise<void | Picworddb> {\n    return this.http.get(this.picworddbURL + '/pre/' + PicWordID)\n                .toPromise()\n                .then(response => response as Picworddb)\n                .catch(this.ErrorMethod);\n  }\n  createPicworddb(newPicworddb: Picworddb) : Promise<void | Picworddb> {\n    return this.http.post(this.picworddbURL, newPicworddb)\n                .toPromise()\n                .then(response => response as Picworddb)\n                .catch(this.ErrorMethod);\n  }\n\n  updatePicworddb(PicWordID : number, updatePicworddb: Picworddb) : Promise<void | Picworddb > {\n    return this.http.put(this.picworddbURL + \"/\" + PicWordID, this.updatePicworddb)\n                  .toPromise()\n                  .then(response => response as Picworddb)\n                  .catch(this.ErrorMethod);\n  }\n\n  deletePicworddb(PicWordID: number) : Promise<void | Picworddb > {\n    return this.http.delete(this.picworddbURL + \"/\" + PicWordID)\n                  .toPromise()\n                  .then(response => response as Picworddb)\n                  .catch(this.ErrorMethod);\n  }\n\n  private ErrorMethod(error: any){\n    console.log(\"something is not working\");\n  };\n}\n\n","import { AfterViewInit, Component} from '@angular/core';\nimport * as anime from 'animejs';\nimport { Router } from '@angular/router';\nimport {NgxEncryptCookieService} from 'ngx-encrypt-cookie';\n\ndeclare var anime: any;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements AfterViewInit {\n  usernamecookie: String;\n\n  constructor(private router: Router, private cookie:NgxEncryptCookieService){\n\n  }\n  ngAfterViewInit(): void {\n    // let animation = anime({\n    //   targets: '.quizlogohome',\n    //   translateY: 100,\n    //   borderRadius: 50,\n    //   duration: 1500,\n    //   easing: 'linear'\n    // });\n    if(this.cookie.get(\"user\", false)==''){\n      $('#loginbtn').show();\n      $('#signupbtn').show();\n      $('#playbtn').text(\"Play as Guest\");\n    } else {\n      $('#loginbtn').hide();\n      $('#signupbtn').hide();\n      $('#playbtn').text(\"Play\");\n    }\n  }\n  playasguest(): void{\n    this.router.navigate(['/quizplay']);\n  }\n  loginbtn(): void{\n    this.router.navigate(['/login']);\n  }\n  singupbtn(): void{\n    this.router.navigate(['/signup']);\n  }\n}\n","<title>QuizBot</title>\n   <link rel=\"shortcut icon\" href=\"../../assets/img/favicon.ico\">\n    <div class=\"container\">\n        <div class=\"container col-lg-6 col-md-10 sm-12\">\n            <div class=\"d-flex flex-row quizlogohome\">\n                <button name=\"loginbtn\" id=\"loginbtn\" (click)=\"loginbtn()\">Login</button>\n            </div>\n            <div class=\"d-flex flex-row quizlogohome\">\n                <button name=\"singupbtn\" id=\"signupbtn\" (click)=\"singupbtn()\">Sign Up!</button>\n            </div>\n            <div class=\"d-flex flex-row quizlogohome\">\n                <button name=\"playbtn\" id=\"playbtn\" (click)=\"playasguest()\">Play as Guest</button>\n            </div>\n        </div>\n    </div>\n<!-- <router-outlet></router-outlet> -->","import { Component, OnInit } from '@angular/core';\nimport {NgxEncryptCookieService} from 'ngx-encrypt-cookie';\nimport { Userprogress } from '../userprogress';\nimport { UserprogressSerService } from '../userprogress-ser.service';\nimport { Userbase } from '../userbase';\nimport { UserbaseSerService } from '../userbase-ser.service';\nimport { Router } from '@angular/router';\nimport { NgZone } from '@angular/core';\n\n@Component({\n  selector: 'app-framework',\n  templateUrl: './framework.component.html',\n  styleUrls: ['./framework.component.css']\n})\nexport class FrameworkComponent implements OnInit {\n\n  constructor(private userbaseService: UserbaseSerService, private userprogressService: UserprogressSerService, private router: Router, private cookie:NgxEncryptCookieService, private ngzone: NgZone) { }\n\n  usernamecookie: String;\n  passcookie: String;\n  keycookie: String;\n\n  public userbase: Userbase={\n      IdUser: null,\n      Username: '',\n      UserPassword: '',\n      UserEmail: '',\n      UserPhoneNumber: null,\n      UserAge: null\n  }\n  public userprogress: Userprogress={\n    Userbase_IdUser:0,\n    PicWordDB_PicWordID:0,\n    PicWordDB_PicDone:0,\n    MathRiddles_idMathRiddle:0,\n    MathRiddle_Done:0,\n    Quiz_idQuiz:0,\n    Quiz_QuizDone:0,\n    UserCoins:0,\n    UserLevel:0\n  }\n\n\n\n  ngOnInit(): void {\n    if(this.cookie.get(\"user\", false)==''){\n      setTimeout(()=>{\n        $('#username_head').attr(\"href\", \"/login\");\n        // this.router.navigate(['/']);\n      }, 300);\n    } else{\n      this.usernamecookie = this.cookie.get(\"user\", false);\n      this.keycookie = this.cookie.get(this.usernamecookie+'-k', false);\n      this.passcookie = this.cookie.get(this.usernamecookie.valueOf(), true, this.keycookie.valueOf());\n      this.userbaseService.getUserbyUserName(this.usernamecookie)\n      .then((userbase: Userbase)=>{\n        this.userbase = userbase});\n      setTimeout(()=>{\n        this.userprogressService.getUserProgress(this.userbase.IdUser)\n        .then((userprogress: Userprogress)=>{\n          this.userprogress = userprogress;\n        });\n        setTimeout(()=>{\n          $('#username_head').attr(\"href\", \"/profile\");\n          $('#username_head').text(this.userbase.Username);\n          $('#coin_head').text(this.userprogress.UserCoins);\n          $('#level_head').text(\"Level: \"+this.userprogress.UserLevel);\n        },300);\n      },300);\n    }\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"container col-lg-6 col-md-10 sm-12\">\n        <div class=\"d-flex flex-row quizlogohome\">\n            <img src=\"../../assets/img/logolandscape.png\" width=\"350px\" alt=\"QuizBot\">\n            <a id=\"username_head\" href=\"#\">Login | Sign-up</a>\n            <label id=\"coin_head\">Coins</label>\n            <label id=\"level_head\">Level</label>\n        </div>\n    </div>\n</div>\n<router-outlet></router-outlet>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport anime from 'animejs/lib/anime.es'\nimport { NgxEncryptCookieService } from 'ngx-encrypt-cookie';\n\nimport { Picwordlist } from '../picwordlist';\nimport { PicwordlistSerService } from '../picwordlist-ser.service';\nimport { Picworddb } from '../Picworddb';\nimport { PicworddbSerService } from '../picworddb-ser.service';\nimport { stringify } from 'querystring';\nimport { Userprogress } from '../userprogress';\nimport { UserprogressSerService } from '../userprogress-ser.service';\nimport { Userbase } from '../userbase';\nimport { UserbaseSerService } from '../userbase-ser.service';\n@Component({\n  selector: 'app-picword-play',\n  templateUrl: './picword-play.component.html',\n  styleUrls: ['./picword-play.component.css']\n})\nexport class PicwordPlayComponent implements OnInit {\n  title: \"Picword Play\";\n  currentPicword: Picworddb;\n  currentPiclist: Picwordlist;\n  picwordID: number;\n  routeSub: Subscription;\n  isDataAvailable:boolean = false;\n  datafetched:boolean = false;\n  picdata: Picworddb;\n  answer: string[]; \n  randomstring: string[];\n  filledwords: number = 0;\n  letterids: number[]=[];\n  usernamecookie: String;\n  passcookie: String;\n  keycookie: String;\n  riddledone: number;\n  picdone: number;\n  tempdata: Picworddb;\n  public userbase: Userbase={\n    IdUser: null,\n    Username: '',\n    UserPassword: '',\n    UserEmail: '',\n    UserPhoneNumber: null,\n    UserAge: null\n  }\n  public userprogress: Userprogress={\n    Userbase_IdUser:0,\n    PicWordDB_PicWordID:0,\n    PicWordDB_PicDone:0,\n    MathRiddles_idMathRiddle:0,\n    MathRiddle_Done:0,\n    Quiz_idQuiz:0,\n    Quiz_QuizDone:0,\n    UserCoins:0,\n    UserLevel:0\n  }\n\n  constructor(private picwordService : PicworddbSerService, private cookie:NgxEncryptCookieService, private userbaseService :UserbaseSerService, private userprogressService :UserprogressSerService, private piclistService : PicwordlistSerService, private route : ActivatedRoute, private router : Router) { }\n\n  ngOnInit(): void {\n    if(this.cookie.get(\"user\", false)==''){\n      this.route.params.subscribe(params => {\n        this.picwordID = params['PicWordID'];\n        if(this.picwordID == null){\n          this.picwordID = 2010203;\n        }\n        this.picwordService\n        .getSinglePicQuiz(this.picwordID)\n        .then((picwords: Picworddb)=>{\n          this.currentPicword = picwords;\n        });\n        this.piclistService\n        .getSinglePiclist(this.picwordID)\n        .then((piclists: Picwordlist)=>{\n          this.currentPiclist = piclists;\n          this.isDataAvailable = true;\n        });\n        this.datafetched = false;\n        setTimeout(() => {\n          this.answer=Array.from(this.currentPicword.PicAnswer);\n          this.randomstring = this.generateRandom(this.currentPicword.PicAnswer);\n        }, 500);\n      });\n    } else{\n      this.usernamecookie = this.cookie.get(\"user\", false);\n      this.keycookie = this.cookie.get(this.usernamecookie+'-k', false);\n      this.passcookie = this.cookie.get(this.usernamecookie.valueOf(), true, this.keycookie.valueOf());\n\n      this.route.params.subscribe(params => {\n        this.picwordID = params['PicWordID'];\n        this.userbaseService.getUserbyUserName(this.usernamecookie)\n        .then((userbase: Userbase)=>{\n          this.userbase = userbase;\n        });\n        setTimeout(()=>{\n          this.userprogressService.getUserProgress(this.userbase.IdUser)\n          .then((userprogress: Userprogress)=>{\n            this.userprogress = userprogress;\n          });\n          setTimeout(()=>{\n            this.picwordID = this.userprogress.PicWordDB_PicWordID;\n            this.picdone = this.userprogress.PicWordDB_PicDone;\n            if(this.picwordID == null || this.picwordID == 0){\n              this.picwordID = 2010203;\n            } else if (this.picwordID != null || this.picwordID != 0){\n              if (this.picdone == 1){\n                this.picwordService.getNextPicQuiz(this.picwordID)\n                .then((picwodbdb: Picworddb)=>{\n                  this.tempdata = picwodbdb;\n                });\n                setTimeout(()=>{\n                  this.picwordID = this.tempdata.PicWordID;\n                }, 200);\n              }\n            }\n            this.picwordService\n            .getSinglePicQuiz(this.picwordID)\n            .then((picwords: Picworddb)=>{\n              this.currentPicword = picwords;\n            });\n            this.piclistService\n            .getSinglePiclist(this.picwordID)\n            .then((piclists: Picwordlist)=>{\n              this.currentPiclist = piclists;\n              this.isDataAvailable = true;\n            });\n            this.datafetched = false;\n            setTimeout(() => {\n              this.answer=Array.from(this.currentPicword.PicAnswer);\n              this.randomstring = this.generateRandom(this.currentPicword.PicAnswer);\n            }, 200);\n          }, 200);\n        }, 200);\n      });\n    }\n\n\n\n\n\n  }\n  generateRandom(word) :string[]{\n    var length = word.length;\n    let final : string[];\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    result = word + result;\n    final = Array.from(result);\n    final = final.sort(() => Math.random() - 0.5);\n    return final;\n  }\n  deleteletter(): void{\n    if(this.filledwords > 0 ){\n      this.filledwords--;\n      $('#letter'+this.letterids[this.letterids.length-1]).show();\n      $('#wordbox' + this.filledwords).text('-');\n      this.letterids.pop();\n    }\n  }\n  letterclick(letter, i) : void{\n    if(this.filledwords<this.currentPicword.PicAnswer.length){\n      $('#wordbox' + this.filledwords).text(letter);\n      this.filledwords++;\n      this.letterids.push(i);\n      $('#letter'+i).hide();\n    } \n    if(this.filledwords>=this.currentPicword.PicAnswer.length){\n      let cans:string='';\n      for(var ab = 0; ab < this.letterids.length; ab++){\n        cans+=this.randomstring[this.letterids[ab]];\n      }\n      if(this.currentPicword.PicAnswer == cans){\n        this.userprogress.PicWordDB_PicWordID = this.picwordID;\n        this.userprogress.PicWordDB_PicDone = 1;\n        this.userprogress.UserCoins = this.userprogress.UserCoins + 4;\n        this.userprogressService.updateUserprogress(this.userbase.IdUser, this.userprogress);\n        setTimeout(()=>{\n          this.nextshow();\n        }, 200);\n      } else{\n        alert(\"Incorrect!\");\n      }\n    }\n  }\n  nextshow(){\n    this.filledwords=0;\n    this.letterids=[];\n    this.picwordService\n    .getNextPicQuiz(this.currentPicword.PicWordID)\n    .then((picwords: Picworddb)=>{\n      this.picdata = picwords;\n      this.datafetched=true;\n    });\n    setTimeout(()=>{if(this.datafetched==true){\n      this.isDataAvailable = false;\n      $('label[id^=\"wordbox\"]').text('-');\n      this.router.navigateByUrl('/picplay/'+this.picdata.PicWordID);\n    }}, 200);\n    \n  }\n\n}\n","<div *ngIf=\"isDataAvailable\" class=\"container\">\n    <div class=\"godimagebox\">\n        <div class=\"row\">\n            <img class=\"col-1\" src=\"http://localhost:8000/images/{{currentPiclist[0].PicLink}}\">\n            <img class=\"col-2\" src=\"http://localhost:8000/images/{{currentPiclist[1].PicLink}}\">\n        </div>\n        <div class=\"row\">\n            <img class=\"col-1\" src=\"http://localhost:8000/images/{{currentPiclist[2].PicLink}}\">\n            <img class=\"col-2\" src=\"http://localhost:8000/images/{{currentPiclist[3].PicLink}}\">\n        </div>\n    </div>\n    <div class=\"answerbox\">\n        <label *ngFor=\"let word of answer; index as i\" class=\"wordbox\" size=\"1\" id=\"wordbox{{i}}\" (click)=\"deleteletter()\">-</label>\n    </div>\n    <div class=\"letterbox\">\n        <button *ngFor=\"let word of randomstring; index as i\" (click)=\"letterclick(word, i)\" id=\"letter{{i}}\">{{word}}</button>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Mathriddles } from './mathriddles';\nimport { from } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MathriddlesSerService {\n  public mathriddlesURL = \"http://localhost:3000/api/mathriddle\";\n\n  constructor( private http:HttpClient ) { }\n  getMathRiddles() : Promise<void | Mathriddles[]>{\n    return this.http.get(this.mathriddlesURL)\n    .toPromise()\n    .then(response => response as Mathriddles[])\n    .catch(this.ErrorMethod);\n  }\n  getRiddle(idMathRiddle: number) : Promise<void | Mathriddles> {\n    return this.http.get(this.mathriddlesURL + '/' + idMathRiddle)\n                .toPromise()\n                .then(response => response as Mathriddles)\n                .catch(this.ErrorMethod);\n  }\n  getNextRiddle(idMathRiddle: number) : Promise<void | Mathriddles> {\n    return this.http.get(this.mathriddlesURL + '/next/' + idMathRiddle)\n                .toPromise()\n                .then(response => response as Mathriddles)\n                .catch(this.ErrorMethod);\n  }\n  getPreRiddle(idMathRiddle: number) : Promise<void | Mathriddles> {\n    return this.http.get(this.mathriddlesURL + '/pre/' + idMathRiddle)\n                .toPromise()\n                .then(response => response as Mathriddles)\n                .catch(this.ErrorMethod);\n  }\n  createMathRiddle(newMathRiddle: Mathriddles) : Promise<void | Mathriddles> {\n    return this.http.post(this.mathriddlesURL, newMathRiddle)\n                .toPromise()\n                .then(response => response as Mathriddles)\n                .catch(this.ErrorMethod);\n  }\n\n  updateMathRiddle(idMathRiddle : number, updateMathRiddle: Mathriddles) : Promise<void | Mathriddles > {\n    return this.http.put(this.mathriddlesURL + \"/\" + idMathRiddle, this.updateMathRiddle)\n                  .toPromise()\n                  .then(response => response as Mathriddles)\n                  .catch(this.ErrorMethod);\n  }\n\n  deleteMathRiddle(idMathRiddle: number) : Promise<void | Mathriddles > {\n    return this.http.delete(this.mathriddlesURL + \"/\" + idMathRiddle)\n                  .toPromise()\n                  .then(response => response as Mathriddles)\n                  .catch(this.ErrorMethod);\n  }\n\n  private ErrorMethod(error: any){\n    console.log(\"something is not working\");\n  };\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Picwordlist } from './picwordlist';\nimport { from } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PicwordlistSerService {\n  public piclistURL = \"http://localhost:3000/api/piclist\";\n\n  constructor( private http:HttpClient ) { }\n  getPiclist() : Promise<void | Picwordlist[]>{\n    return this.http.get(this.piclistURL)\n    .toPromise()\n    .then(response => response as Picwordlist[])\n    .catch(this.ErrorMethod);\n  }\n  getSinglePiclist(PicID: number) : Promise<void | Picwordlist> {\n    return this.http.get(this.piclistURL + '/' + PicID)\n                .toPromise()\n                .then(response => response as Picwordlist)\n                .catch(this.ErrorMethod);\n  }\n  createPicwordlist(newPicwordlist: Picwordlist) : Promise<void | Picwordlist> {\n    return this.http.post(this.piclistURL, newPicwordlist)\n                .toPromise()\n                .then(response => response as Picwordlist)\n                .catch(this.ErrorMethod);\n  }\n\n  updatePicwordlist(PicID : String, updatePicwordlist: Picwordlist) : Promise<void | Picwordlist > {\n    return this.http.put(this.piclistURL + \"/\" + PicID, this.updatePicwordlist)\n                  .toPromise()\n                  .then(response => response as Picwordlist)\n                  .catch(this.ErrorMethod);\n  }\n\n  deletePicwordlist(PicID: String) : Promise<void | Picwordlist > {\n    return this.http.delete(this.piclistURL + \"/\" + PicID)\n                  .toPromise()\n                  .then(response => response as Picwordlist)\n                  .catch(this.ErrorMethod);\n  }\n\n  private ErrorMethod(error: any){\n    console.log(\"something is not working\");\n  };\n\n}\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<p>profile works!</p>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http'\nimport { AbstractControl, FormsModule, ReactiveFormsModule, ValidatorFn } from '@angular/forms';\nimport { QuizPlayComponent } from './quiz-play/quiz-play.component';\nimport { FrameworkComponent } from './framework/framework.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PicwordPlayComponent } from './picword-play/picword-play.component';\nimport { MathPlayComponent } from './math-play/math-play.component';\n\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    QuizPlayComponent,\n    FrameworkComponent,\n    ProfileComponent,\n    LoginComponent,\n    SignupComponent,\n    PicwordPlayComponent,\n    MathPlayComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      { \n        path: '',\n        component: HomeComponent \n      },\n      {\n        path: 'quizplay',\n        component: QuizPlayComponent\n      },\n      {\n        path: 'quizplay/:idQuiz',\n        component: QuizPlayComponent\n      },\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'signup',\n        component: SignupComponent\n      },\n      {\n        path: 'picplay',\n        component: PicwordPlayComponent\n      },\n      {\n        path: 'picplay/:PicWordID',\n        component: PicwordPlayComponent\n      },\n      {\n        path: 'mathplay',\n        component: MathPlayComponent\n      },\n      {\n        path: 'mathplay/:idMathRiddle',\n        component: MathPlayComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      }\n    ])\n  ],\n  providers: [{provide:APP_BASE_HREF, useValue:'/'}],\n  bootstrap: [FrameworkComponent]\n})\nexport class AppModule { }\nexport function forbiddenNameValidator(nameRe: RegExp): ValidatorFn {\n  return (control: AbstractControl): {[key: string]: any} | null => {\n    const forbidden = nameRe.test(control.value);\n    return forbidden ? {forbiddenName: {value: control.value}} : null;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Userbase } from './userbase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserbaseSerService {\n  public userbaseURL = \"http://localhost:3000/users\";\n\n  constructor( private http:HttpClient) { }\n  getUserbase() : Promise<void | Userbase[]>{\n    return this.http.get(this.userbaseURL)\n    .toPromise()\n    .then(response => response as Userbase[])\n    .catch(this.ErrorMethod);\n  }\n  getSingleUser(IdUser: String) : Promise<void | Userbase> {\n    return this.http.get(this.userbaseURL + '/' + IdUser)\n                .toPromise()\n                .then(response => response as Userbase)\n                .catch(this.ErrorMethod);\n  }\n  getUserbyUserName(Username: String) : Promise<void | Userbase> {\n    return this.http.get(this.userbaseURL + '/user/' + Username)\n                .toPromise()\n                .then(response => response as Userbase)\n                .catch(this.ErrorMethod);\n  }\n\n  createUser(newUser: Userbase) : Promise<void | Userbase> {\n    return this.http.post(this.userbaseURL, newUser)\n                .toPromise()\n                .then(response => response as Userbase)\n                .catch(this.ErrorMethod);\n  }\n\n  updateUser(IdUser : String, UpdateUser: Userbase) : Promise<void | Userbase > {\n    return this.http.put(this.userbaseURL + \"/\" + IdUser, this.updateUser)\n                  .toPromise()\n                  .then(response => response as Userbase)\n                  .catch(this.ErrorMethod);\n  }\n\n  deleteUser(IdUser: String) : Promise<void | Userbase > {\n    return this.http.delete(this.userbaseURL + \"/\" + IdUser)\n                  .toPromise()\n                  .then(response => response as Userbase)\n                  .catch(this.ErrorMethod);\n  }\n\n  private ErrorMethod(error: any){\n    console.log(\"something is not working\");\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxEncryptCookieService } from 'ngx-encrypt-cookie';\nimport { Mathriddles } from '../mathriddles';\nimport { MathriddlesSerService } from '../mathriddles-ser.service';\nimport { Userprogress } from '../userprogress';\nimport { UserprogressSerService } from '../userprogress-ser.service';\nimport { Userbase } from '../userbase';\nimport { UserbaseSerService } from '../userbase-ser.service';\n\n@Component({\n  selector: 'app-math-play',\n  templateUrl: './math-play.component.html',\n  styleUrls: ['./math-play.component.css']\n})\nexport class MathPlayComponent implements OnInit {\n\n  currentRiddle : Mathriddles;\n  idMathRiddle : number;\n  answer : String = '';\n  datafetched : boolean = false;\n  isDataAvailable: boolean = false;\n  uservalue: String[] = [];\n  riddledata: Mathriddles;\n  tempdata: Mathriddles;\n  usernamecookie: String;\n  passcookie: String;\n  keycookie: String;\n  riddledone: number;\n  public userbase: Userbase={\n    IdUser: null,\n    Username: '',\n    UserPassword: '',\n    UserEmail: '',\n    UserPhoneNumber: null,\n    UserAge: null\n}\npublic userprogress: Userprogress={\n  Userbase_IdUser:0,\n  PicWordDB_PicWordID:0,\n  PicWordDB_PicDone:0,\n  MathRiddles_idMathRiddle:0,\n  MathRiddle_Done:0,\n  Quiz_idQuiz:0,\n  Quiz_QuizDone:0,\n  UserCoins:0,\n  UserLevel:0\n}\n  constructor( private mathriddleService : MathriddlesSerService, private cookie:NgxEncryptCookieService, private userbaseService :UserbaseSerService, private userprogressService :UserprogressSerService, private route : ActivatedRoute, private router : Router) { \n  }\n  ngOnInit(): void {\n    if(this.cookie.get(\"user\", false)==''){\n      this.route.params.subscribe(params => {\n        this.idMathRiddle = params['idMathRiddle'];\n        if(this.idMathRiddle == null){\n          this.idMathRiddle = 1;\n        }\n        this.mathriddleService\n        .getRiddle(this.idMathRiddle)\n        .then((mathriddles: Mathriddles)=>{\n          this.currentRiddle = mathriddles;\n          // console.log(this.currentRiddle);\n          this.isDataAvailable = true;\n        });\n        this.datafetched = false;\n        setTimeout(() => {\n          this.answer = this.currentRiddle.MathRiddleAnswer;\n        }, 500);\n      });\n    } else{\n\n      this.usernamecookie = this.cookie.get(\"user\", false);\n      this.keycookie = this.cookie.get(this.usernamecookie+'-k', false);\n      this.passcookie = this.cookie.get(this.usernamecookie.valueOf(), true, this.keycookie.valueOf());\n\n      this.route.params.subscribe(params => {\n        this.idMathRiddle = params['idMathRiddle'];\n\n        this.userbaseService.getUserbyUserName(this.usernamecookie)\n        .then((userbase: Userbase)=>{\n          this.userbase = userbase;\n        });\n        setTimeout(()=>{\n          this.userprogressService.getUserProgress(this.userbase.IdUser)\n          .then((userprogress: Userprogress)=>{\n            this.userprogress = userprogress;\n          });\n          setTimeout(()=>{\n            this.idMathRiddle = this.userprogress.MathRiddles_idMathRiddle;\n            this.riddledone = this.userprogress.MathRiddle_Done;\n            if(this.idMathRiddle == null || this.idMathRiddle == 0){\n              this.idMathRiddle = 1;\n            } else if( this.idMathRiddle!=null || this.idMathRiddle != 0){\n              if (this.riddledone == 1){\n                this.mathriddleService\n                .getNextRiddle(this.idMathRiddle)\n                .then((riddles: Mathriddles)=>{\n                  this.tempdata = riddles;\n                });\n                setTimeout(()=>{\n                  this.idMathRiddle = this.tempdata.idMathRiddle;\n                }, 200)\n              }\n            }\n            this.mathriddleService\n            .getRiddle(this.idMathRiddle)\n            .then((mathriddles: Mathriddles)=>{\n              this.currentRiddle = mathriddles;\n              // console.log(this.currentRiddle);\n              this.isDataAvailable = true;\n            });\n            this.datafetched = false;\n            setTimeout(() => {\n              this.answer = this.currentRiddle.MathRiddleAnswer;\n            }, 500);\n          }, 200);\n        }, 300);\n\n\n\n        \n      });\n    }\n  }\n  insertedvalue(value): void{\n    $('#answerbox').val($('#answerbox').val()+value);\n  }\n  enterclick(): void{\n    if($('#answerbox').val() != this.currentRiddle.MathRiddleAnswer){\n      alert(\"Please Try Again!\");\n      $('#answerbox').val(\"\");\n    } else if($('#answerbox').val() == this.currentRiddle.MathRiddleAnswer){\n      $('#answerbox').val(\"\");\n\n      this.userprogress.MathRiddles_idMathRiddle = this.idMathRiddle;\n      this.userprogress.MathRiddle_Done = 1;\n      this.userprogress.UserCoins = this.userprogress.UserCoins + 4;\n      this.userprogressService.updateUserprogress(this.userbase.IdUser, this.userprogress);\n\n\n      this.mathriddleService\n      .getNextRiddle(this.currentRiddle.idMathRiddle)\n      .then((riddles: Mathriddles)=>{\n        this.riddledata = riddles;\n        this.datafetched=true;\n      });\n      setTimeout(()=>{if(this.datafetched==true){\n          this.isDataAvailable = false;\n        this.router.navigateByUrl('/mathplay/'+this.riddledata.idMathRiddle);\n      }}, 500);\n    }\n  }\n\n}\n","<div *ngIf=\"isDataAvailable\" class=\"container\">\n    <div class=\"godimage\">\n        <img src=\"http://localhost:8000/mathrid/{{currentRiddle.MathRiddle}}\" alt=\"Riddle\" style='max-height:\"550px\";'>\n    </div>\n    <div class=\"inputarea\">\n        <div class=\"row\">\n            <input type=\"text\" name=\"anserbox\" id=\"answerbox\" disabled>\n            <button>Hint</button>\n            <button (click) = \"enterclick()\">Enter</button>\n        </div>\n        <div class=\"row\">\n            <button (click)=\"insertedvalue(1)\">1</button>\n            <button (click)=\"insertedvalue(2)\">2</button>\n            <button (click)=\"insertedvalue(3)\">3</button>\n            <button (click)=\"insertedvalue(4)\">4</button>\n            <button (click)=\"insertedvalue(5)\">5</button>\n        </div>\n        <div class=\"row\">\n            <button (click)=\"insertedvalue(6)\">6</button>\n            <button (click)=\"insertedvalue(7)\">7</button>\n            <button (click)=\"insertedvalue(8)\">8</button>\n            <button (click)=\"insertedvalue(9)\">9</button>\n            <button (click)=\"insertedvalue(0)\">0</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { Subscription } from 'rxjs';\nimport anime from 'animejs/lib/anime.es'\nimport { Quiz } from '../quiz';\nimport { NgxEncryptCookieService } from 'ngx-encrypt-cookie';\nimport { QuizSerService } from '../quiz-ser.service';\nimport { Userprogress } from '../userprogress';\nimport { UserprogressSerService } from '../userprogress-ser.service';\nimport { Userbase } from '../userbase';\nimport { UserbaseSerService } from '../userbase-ser.service';\n\n@Component({\n  selector: 'app-quiz-play',\n  templateUrl: './quiz-play.component.html',\n  styleUrls: ['./quiz-play.component.css']\n})\nexport class QuizPlayComponent implements OnInit {\n  title: \"Quiz\";\n  currentQuiz: Quiz;\n  idQuiz: number;\n  routeSub: Subscription;\n  a : String;\n  usernamecookie: String;\n  passcookie: String;\n  keycookie: String;\n  ChosenAnswer: String = null;\n  optionArray: String[]=[\"#Op1\", \"#Op2\", \"#Op3\", \"#Op4\"];\n  quizdone: number;\n  dataloaded: boolean= false;\n  public userbase: Userbase={\n      IdUser: null,\n      Username: '',\n      UserPassword: '',\n      UserEmail: '',\n      UserPhoneNumber: null,\n      UserAge: null\n  }\n  public userprogress: Userprogress={\n    Userbase_IdUser:0,\n    PicWordDB_PicWordID:0,\n    PicWordDB_PicDone:0,\n    MathRiddles_idMathRiddle:0,\n    MathRiddle_Done:0,\n    Quiz_idQuiz:0,\n    Quiz_QuizDone:0,\n    UserCoins:0,\n    UserLevel:0\n  }\n  constructor(private quizService :QuizSerService, private userbaseService :UserbaseSerService, private userprogressService :UserprogressSerService, private cookie:NgxEncryptCookieService, private route :ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    if(this.cookie.get(\"user\", false)==''){\n      this.routeSub = this.route.params.subscribe(params => {\n        this.idQuiz = params['idQuiz'];\n        if (this.idQuiz==null || this.idQuiz==0) {\n          this.idQuiz=1;\n        }\n        this.quizService\n              .getSingleQuestion(this.idQuiz)\n              .then((quizzes:Quiz)=>{\n                this.currentQuiz = quizzes\n              });\n              setTimeout(()=>{\n                // this.router.navigate(['/']);\n                $(\"#h3quizquestion\").html(this.currentQuiz.QuizQuestion);\n                $(\"#h5quizdetail\").html(this.currentQuiz.QuizQuestionDetail);\n                $(\"#Op1\").html(this.currentQuiz.QuizOp1);\n                $(\"#Op2\").html(this.currentQuiz.QuizOp2);\n                $(\"#Op3\").html(this.currentQuiz.QuizOp3);\n                $(\"#Op4\").html(this.currentQuiz.QuizOp4);\n                $('#opselecth').remove();\n                $('#correctlabel').remove();\n                this.dataloaded = true;\n                anime({\n                  targets: this.optionArray,\n                  color: \"#ffffff\",\n                  duration: 300,\n                  easing: 'linear'\n                });\n              }, 300);\n      });\n      \n    } else{\n      this.usernamecookie = this.cookie.get(\"user\", false);\n      this.keycookie = this.cookie.get(this.usernamecookie+'-k', false);\n      this.passcookie = this.cookie.get(this.usernamecookie.valueOf(), true, this.keycookie.valueOf());\n      // alert(this.passcookie);\n      this.routeSub = this.route.params.subscribe(params => {\n        this.idQuiz = params['idQuiz'];\n        \n        this.userbaseService.getUserbyUserName(this.usernamecookie)\n        .then((userbase: Userbase)=>{\n          this.userbase = userbase;\n        });\n\n        setTimeout(()=>{\n          this.userprogressService.getUserProgress(this.userbase.IdUser)\n          .then((userprogress: Userprogress)=>{\n            this.userprogress = userprogress;\n          });\n            setTimeout(()=>{\n              this.idQuiz = this.userprogress.Quiz_idQuiz;\n              this.quizdone = this.userprogress.Quiz_QuizDone;\n              if (this.idQuiz==null || this.idQuiz==0) {\n                this.idQuiz=1;\n              } else if (this.idQuiz!=null || this.idQuiz != 0){\n                if (this.quizdone == 1){\n                  this.idQuiz = this.idQuiz + 1;\n                }\n              }\n              this.quizService\n              .getSingleQuestion(this.idQuiz)\n              .then((quizzes:Quiz)=>{\n                this.currentQuiz = quizzes\n              });\n              setTimeout(()=>{\n                $(\"#h3quizquestion\").text(this.currentQuiz.QuizQuestion);\n                $(\"#h5quizdetail\").text(this.currentQuiz.QuizQuestionDetail);\n                $(\"#Op1\").text(this.currentQuiz.QuizOp1);\n                $(\"#Op2\").text(this.currentQuiz.QuizOp2);\n                $(\"#Op3\").text(this.currentQuiz.QuizOp3);\n                $(\"#Op4\").text(this.currentQuiz.QuizOp4);\n                $('#opselecth').remove();\n                $('#correctlabel').remove();\n                $('#coin_head').text(this.userprogress.UserCoins);\n                $('#level_head').text(\"Level: \"+this.userprogress.UserLevel);\n                this.dataloaded = true;\n                anime({\n                  targets: this.optionArray,\n                  color: \"#ffffff\",\n                  duration: 300,\n                  easing: 'linear'\n                });\n              }, 100);\n              \n            }, 300);\n\n        }, 300)\n\n      });\n    }\n  }\n  OptionClicked(event) {\n    this.a=event.target.id;\n    $('#opselecth').remove();\n    switch (this.a) {\n      case \"Op1\":\n        this.ChosenAnswer = this.currentQuiz.QuizOp1;\n        break;\n      case \"Op2\":\n        this.ChosenAnswer = this.currentQuiz.QuizOp2;\n        break;\n      case \"Op3\":\n        this.ChosenAnswer = this.currentQuiz.QuizOp3;\n        break;\n      case \"Op4\":\n        this.ChosenAnswer = this.currentQuiz.QuizOp4;\n        break;\n      default:\n      this.ChosenAnswer = null;\n        break;\n    }\n    \n    let coption = \"#\"+this.a;\n    let restArray = this.optionArray.filter(function (option){\n        return option != coption;\n      });\n      // console.log(restArray);\n      anime({\n        targets: coption,\n        color: \"#fff111\",\n        duration: 300,\n        easing: 'linear'\n      });\n      anime({\n        targets: restArray,\n        color: \"#ffffff\",\n        duration: 300,\n        easing: 'linear'\n      });\n    }\n    CheckAnswer(): void{\n      // alert('Hey');\n      if (this.ChosenAnswer == null){\n        $(\"#Op4\").after(\"<h5 id=\\\"opselecth\\\">Please Select an Option!</h5>\");\n      } else if(this.currentQuiz.QuizC_Op == this.ChosenAnswer){\n          anime({\n          targets: \"#\"+this.a,\n          color: \"#39FF14\",\n          duration: 100,\n          easing: 'linear'\n          });\n          $(\"#Op4\").after(\"<h5 style=\\\"color: #39FF14;\\\" id=\\\"opselecth\\\">Correct!</h5>\");\n          this.userprogress.Quiz_idQuiz = this.idQuiz;\n          this.userprogress.Quiz_QuizDone = 1;\n          this.userprogress.UserCoins = this.userprogress.UserCoins + 4;\n          // console.log(this.userprogress);\n          this.userprogressService.updateUserprogress(this.userbase.IdUser, this.userprogress);\n          \n          $(\"#opselecth\").after(\"<h5 id='correctlabel'>Loading next question...</h5>\");\n          this.dataloaded = false;\n          setTimeout(()=>{\n            this.router.navigate(['/quizplay/'+(this.currentQuiz.idQuiz+1)]);\n            }, 3000);\n        } else\n        {\n          $(\"#Op4\").after(\"<h5 style=\\\"color: red;\\\" id=\\\"opselecth\\\">Incorrect!!</h5>\");\n          $(\"#opselecth\").after(\"<h5 id='correctlabel'>Please Try Again!</h5>\");\n          setTimeout(()=>{\n            $('#opselecth').remove();\n            $('#correctlabel').remove();\n            anime({\n              targets: this.optionArray,\n              color: \"#ffffff\",\n              duration: 300,\n              easing: 'linear'\n            });\n          }, 2000);\n      }\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"page-header\" id=\"banner\">\n      <div class=\"row\">   \n        <div class=\"col-lg-12\">  &nbsp;\n          <h1>{{title}}</h1>  &nbsp;\n        </div>\n      </div>\n    </div>\n  <div class=\"row\">\n    <div class=\"container col-lg-8 col-md-10 col-sm-12 col-xs-12\">\n      <div class=\" col-xs-12 col-lg-12 col-lg-offset-1 border-primary\">\n        <h3 class=\"card-header\" id=\"h3quizquestion\">Loading Question</h3>\n        <div class=\"card-body\">\n          <h5 class=\"card-subtitle text-muted font-italic\" id=\"h5quizdetail\">Loading Details</h5>\n          <!-- <img style=\"width: 250px;\" src=\"{{currentFood.Src}}\" alt=\"Card image\"/> -->\n        </div>\n        <div class=\"card-body\">\n          <h4 class=\"card-title op1\" style=\"cursor: pointer;\" id=\"Op1\" (click)=\"OptionClicked($event)\">Loading Options</h4>\n          <h4 class=\"card-title op2\" style=\"cursor: pointer;\" id=\"Op2\" (click)=\"OptionClicked($event)\">Loading Options</h4>\n          <h4 class=\"card-title op3\" style=\"cursor: pointer;\" id=\"Op3\" (click)=\"OptionClicked($event)\">Loading Options</h4>\n          <h4 class=\"card-title op4\" style=\"cursor: pointer;\" id=\"Op4\" (click)=\"OptionClicked($event)\">Loading Options</h4>\n        </div>\n        <div class=\"card-body\">\n          <a class=\"pull-left btn btn-danger\" *ngIf=\"dataloaded && (currentQuiz.idQuiz>1)\" href=\"/quizplay/{{currentQuiz.idQuiz-1}}\">Previous</a>\n          &nbsp;\n          <button class=\"pull-right btn btn-primary\" *ngIf=\"dataloaded\" href=\"#\" (click)=\"CheckAnswer()\" style=\"margin-right:15px;\">Submit</button>\n          <a class=\"pull-right btn btn-primary\" *ngIf=\"dataloaded\" href=\"/quizplay/{{currentQuiz.idQuiz+1}}\" style=\"margin-right:15px;\">Next</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- <app-footer></app-footer> -->","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Userprogress } from './userprogress';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserprogressSerService {\n  public userprogressURL = \"http://localhost:3000/api/userprog\";\n\n  constructor( private http:HttpClient ) { }\n  // getUserProgress() : Promise<void | Userprogress[]>{\n  //   return this.http.get(this.userprogressURL)\n  //   .toPromise()\n  //   .then(response => response as Userprogress[])\n  //   .catch(this.ErrorMethod);\n  // }\n  getUserProgress(Userbase_IdUser: number) : Promise<void | Userprogress> {\n    return this.http.get(this.userprogressURL + '/' + Userbase_IdUser)\n                .toPromise()\n                .then(response => response as Userprogress)\n                .catch(this.ErrorMethod);\n  }\n\n  createUserProgress(newUserProgress: Userprogress) : Promise<void | Userprogress> {\n    return this.http.post(this.userprogressURL, newUserProgress)\n                .toPromise()\n                .then(response => response as Userprogress)\n                .catch(this.ErrorMethod);\n  }\n\n  updateUserprogress(Userbase_IdUser : number, updateUserprogress: Userprogress) : Promise<void | Userprogress > {\n    return this.http.put(this.userprogressURL + \"/\" + Userbase_IdUser, updateUserprogress)\n                  .toPromise()\n                  .then(response => response as Userprogress)\n                  .catch(this.ErrorMethod);\n  }\n\n  deleteUserProgress(Userbase_IdUser: number) : Promise<void | Userprogress > {\n    return this.http.delete(this.userprogressURL + \"/\" + Userbase_IdUser)\n                  .toPromise()\n                  .then(response => response as Userprogress)\n                  .catch(this.ErrorMethod);\n  }\n\n  private ErrorMethod(error: any){\n    console.log(\"something is not working\");\n  };\n}\n\n","import { IfStmt } from '@angular/compiler';\nimport { Component, OnInit, NgZone, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Userbase } from '../userbase';\nimport { UserbaseSerService } from '../userbase-ser.service';\nimport { forbiddenNameValidator } from '../app.module';\nimport { isNullOrUndefined } from 'util';\nimport { CookieService } from 'ngx-cookie-service';\nimport {NgxEncryptCookieService} from 'ngx-encrypt-cookie';\nimport { FormGroup, FormControl, FormsModule, FormBuilder, Validators,  ReactiveFormsModule } from '@angular/forms';\nimport { Userprogress } from '../userprogress';\nimport { UserprogressSerService } from '../userprogress-ser.service';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n  providers: [UserbaseSerService, NgxEncryptCookieService]\n})\nexport class SignupComponent implements OnInit {\n  title:\"Create User\";\n  currentUser: Userbase;\n  signupForm = new FormGroup({\n    Username: new FormControl,\n    UserPassword: new FormControl,\n    UserEmail: new FormControl,\n    UserPhoneNumber: new FormControl,\n    UserAge: new FormControl\n  });\n  checkr: Boolean;\n  UserPhoneNumber: String;\n  constructor(private userbaseService: UserbaseSerService, private userprogressService: UserprogressSerService, private router: Router, private cookie:NgxEncryptCookieService, private ngzone: NgZone, private signupFormBuilder: FormBuilder) {\n  }\n  public userbase: Userbase={\n      IdUser: null,\n      Username: '',\n      UserPassword: '',\n      UserEmail: '',\n      UserPhoneNumber: null,\n      UserAge: null\n  }\n  public userprogress: Userprogress={\n    Userbase_IdUser:0,\n    PicWordDB_PicWordID:0,\n    PicWordDB_PicDone:0,\n    MathRiddles_idMathRiddle:0,\n    MathRiddle_Done:0,\n    Quiz_idQuiz:0,\n    Quiz_QuizDone:0,\n    UserCoins:0,\n    UserLevel:0\n  }\n  \n  ngOnInit(): void {\n\n    if(this.cookie.get(\"user\", false)!=''){\n      setTimeout(()=>{\n        this.router.navigate(['/']);\n      }, 500);\n    } else{\n      this.signupForm = this.signupFormBuilder.group({\n        Username: new FormControl (this.userbase.Username, [\n          Validators.required, \n          Validators.minLength(4),\n          Validators.pattern(\"^(?=.{4,20}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$\")\n          ]),\n        UserPassword: new FormControl (this.userbase.UserPassword, [\n          Validators.required, Validators.minLength(8)\n          ]),\n        UserEmail: new FormControl (this.userbase.UserEmail, [\n          Validators.required, Validators.email\n          ]),\n        UserPhoneNumber: new FormControl(this.userbase.UserPhoneNumber, [\n          Validators.required,\n          Validators.pattern(\"^\\\\s*(?:\\\\+?(\\\\d{1,3}))?[-. (]*(\\\\d{3})[-. )]*(\\\\d{3})[-. ]*(\\\\d{4})(?: *x(\\\\d+))?\\\\s*$\")\n        ]),\n        UserAge: new FormControl (this.userbase.UserAge, [\n          Validators.required,\n          Validators.pattern(\"^(0?[1-9]|[1-9][0-9]|[1][1-9][1-9]|200)$\")\n        ])\n      });\n    }\n  }\n  public CreateUser(userbase: Userbase): void{\n    this.userbaseService.createUser(userbase)\n    .then ((createdUser: Userbase) => {\n      this.ngzone.run(()=>{\n        // this.router.navigate(['/']);\n      })\n    })\n  }\n  public CreateUserprogress(userprogress: Userprogress): void{\n    this.userprogressService.createUserProgress(userprogress)\n    .then ((createdUser: Userprogress) => {\n      this.ngzone.run(()=>{\n        this.router.navigate(['/']);\n      })\n    })\n  }\n  public Validation(signupForm): void{\n    this.checkr=true;\n    // this.Username=signupForm.value.Username;\n    // this.UserPassword=signupForm.value.UserPassword;\n    // this.UserEmail=signupForm.value.UserEmail;\n    this.UserPhoneNumber=signupForm.value.UserPhoneNumber;\n    // this.UserAge=signupForm.value.UserAge;\n    if(RegExp(\"^(?=.{4,20}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$\").test(signupForm.value.Username)){\n      this.userbase.Username = signupForm.value.Username;\n    } else {\n      alert(\"incorrect username values!\");\n      this.checkr=false;\n    }\n    if(signupForm.value.UserPassword.length>=8){\n      this.userbase.UserPassword = signupForm.value.UserPassword;\n    } else {\n      alert(\"Invalid entries in password!\");\n      this.checkr=false;\n    }\n    if(RegExp(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\").test(signupForm.value.UserEmail)){\n      this.userbase.UserEmail = signupForm.value.UserEmail;\n    } else {\n      alert(\"Invalid Entries for Email!\");\n      this.checkr=false;\n    }\n    if(RegExp(\"^\\\\s*(?:\\\\+?(\\\\d{1,3}))?[-. (]*(\\\\d{3})[-. )]*(\\\\d{3})[-. ]*(\\\\d{4})(?: *x(\\\\d+))?\\\\s*$\").test(signupForm.value.UserPhoneNumber)){\n      this.UserPhoneNumber = this.UserPhoneNumber.replace(/[\\D]/g, '');\n      this.userbase.UserPhoneNumber = Number(this.UserPhoneNumber);\n    } else {\n      alert(\"Invalid Entries for Phone Number!\");\n      this.checkr=false;\n    }\n    if(RegExp(\"^(0?[1-9]|[1-9][0-9]|[1][1-9][1-9]|200)$\").test(signupForm.value.UserAge)){\n      this.userbase.UserAge = signupForm.value.UserAge;\n    } else {\n      alert(\"Invalid Entries for Age!\");\n      this.checkr=false;\n    }\n    if(this.checkr == true){\n      var key = this.cookie.generateKey();\n      console.log(key);\n      this.CreateUser(this.userbase);\n      signupForm.reset();\n      setTimeout(() => {\n        this.userbaseService.getUserbyUserName(this.userbase.Username)\n        .then((userbase: Userbase)=>{\n          this.userbase = userbase});\n          setTimeout(()=>{\n            alert(this.userbase.IdUser);\n            this.userprogress.Userbase_IdUser=this.userbase.IdUser;\n            this.CreateUserprogress(this.userprogress);\n            this.cookie.set(\"user\",this.userbase.Username, false);\n            this.cookie.set(this.userbase.Username, this.userbase.UserPassword, true, key, 2);\n            this.cookie.set(this.userbase.Username+\"-k\", key, false);\n          }, 300);\n      }, 300);\n\n    } else{\n      alert(\"Something went wrong!\");\n    }\n    \n  }\n  \n\n}\n","<title>QuizBot | Sign Up</title>\n<link rel=\"shortcut icon\" href=\"../../assets/img/favicon.ico\">\n<div class=\"container\">\n    <div class=\"container col-lg-6 col-md-10 sm-12\">\n        <form  [formGroup]=\"signupForm\" (submit)=\"Validation(signupForm)\">\n                <input class=\"form-control\" type=\"email\" name=\"Email\" id=\"Email\" formControlName=\"UserEmail\" placeholder=\"Email\" >\n                <div *ngIf=\"signupForm.controls.UserEmail.invalid && (signupForm.controls.UserEmail.dirty || signupForm.controls.UserEmail.touched)\" class=\"alert alert-danger\">\n                    <div *ngIf=\"signupForm.controls.UserEmail.errors?.required\">\n                        Please Input Email\n                    </div>\n                    <div *ngIf=\"signupForm.controls.UserEmail.errors?.email\">\n                       Please input valid Email\n                    </div>\n                </div>\n                <input class=\"form-control\" type=\"text\" name=\"Username\" id=\"Username\" placeholder=\"Username\" formControlName=\"Username\">\n                <div *ngIf=\"signupForm.controls.Username.invalid && (signupForm.controls.Username.dirty || signupForm.controls.Username.touched)\" class=\"alert alert-danger\">\n                    <div *ngIf=\"signupForm.controls.Username.errors?.required\">\n                        Please Input Username\n                    </div>\n                    <div *ngIf=\"signupForm.controls.Username.errors?.minlength\">\n                        The minimum length of the Username should be 4 Characters\n                    </div>\n                    <div *ngIf=\"signupForm.controls.Username.errors?.pattern\">\n                        No Special Characters Allowed\n                    </div>\n                </div>\n                <input type=\"tel\" class=\"form-control\" name=\"Phone\" id=\"Phone\" formControlName=\"UserPhoneNumber\" placeholder=\"Phone\">\n                <div *ngIf=\"signupForm.controls.UserPhoneNumber.invalid && (signupForm.controls.UserPhoneNumber.dirty || signupForm.controls.UserPhoneNumber.touched)\" class=\"alert alert-danger\">\n                    <div *ngIf=\"signupForm.controls.UserPhoneNumber.errors?.required\">\n                        Please Input a Phone Number\n                    </div>\n                    <div *ngIf=\"signupForm.controls.UserPhoneNumber.errors?.pattern\">\n                        No Special Characters Allowed\n                    </div>\n                </div>\n                <input type=\"password\" class=\"form-control\" name=\"Password\" id=\"Password\" formControlName=\"UserPassword\" placeholder=\"Password\">\n                <div *ngIf=\"signupForm.controls.UserPassword.invalid && (signupForm.controls.UserPassword.dirty || signupForm.controls.UserPassword.touched)\" class=\"alert alert-danger\">\n                    <div *ngIf=\"signupForm.controls.UserPassword.errors?.required\">\n                        Please Input a Password\n                    </div>\n                    <div *ngIf=\"signupForm.controls.UserPassword.errors?.minlength\">\n                        Password cannot be less than 8 Characters\n                    </div>\n                </div>\n                <input type=\"number\" class=\"form-control\" name=\"Age\" id=\"Age\" formControlName=\"UserAge\" placeholder=\"Age\">\n                <div *ngIf=\"signupForm.controls.UserAge.invalid && (signupForm.controls.UserAge.dirty || signupForm.controls.UserAge.touched)\" class=\"alert alert-danger\">\n                    <div *ngIf=\"signupForm.controls.UserAge.errors?.required\">\n                        Please Input Proper age\n                    </div>\n                    <div *ngIf=\"signupForm.controls.UserAge.errors?.pattern\">\n                        Age can be between 1-200\n                    </div>\n                </div>\n                <div class=\"d-flex flex-row quizlogohome\">\n                    <button type=\"submit\" value=\"submit\" name=\"signbtn\">Sign-Up</button>\n                </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit, NgZone, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Userbase } from '../userbase';\nimport { FormGroup, FormControl, FormsModule, FormBuilder, Validators,  ReactiveFormsModule } from '@angular/forms';\nimport { UserbaseSerService } from '../userbase-ser.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport {NgxEncryptCookieService} from 'ngx-encrypt-cookie';\nimport { forbiddenNameValidator } from '../app.module';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [NgxEncryptCookieService]\n})\nexport class LoginComponent implements OnInit {\n  currentUser: Userbase;\n  loginForm: FormGroup;\n  constructor(private userbaseService: UserbaseSerService, private router: Router, private ngZone: NgZone, private cookie:NgxEncryptCookieService, loginFormBuilder: FormBuilder) { \n    this.loginForm = loginFormBuilder.group({\n      Username: ['', Validators.required, Validators.minLength[4], forbiddenNameValidator(/^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/)],\n      Password: ''\n    });\n  }\n\n\n  ngOnInit(): void {\n  }\n  public loginAcc(loginForm){\n    this.userbaseService.getUserbyUserName(loginForm.Username)\n    .then((userbase: Userbase)=>{\n      this.currentUser = userbase});\n      setTimeout(()=>{\n        if (loginForm.Password === this.currentUser.UserPassword) {\n        var key = this.cookie.generateKey();\n        console.log(key);\n        this.cookie.set(loginForm.Username, loginForm.Password, true, key, 2);\n        this.cookie.set(loginForm.Username+\" k\", key, false);\n        this.cookie.set(\"user\",loginForm.Username, false);\n        this.router.navigate(['/']);\n      }}, 500);\n  }\n\n}\n","<title>QuizBot | Login</title>\n<link rel=\"shortcut icon\" href=\"../../assets/img/favicon.ico\">\n<div class=\"container\">\n    <div class=\"container col-lg-6 col-md-10 sm-12\">\n        <form [formGroup]=\"loginForm\" (submit)=\"loginAcc(loginForm.value)\">\n            <fieldset class=\"d-flex flex-row\">\n                <input type=\"text\" formControlName=\"Username\" name=\"Username\" id=\"Username\" placeholder=\"Username\">\n                <div *ngIf=\"loginForm.value.Username.invalid && (loginForm.value.Username.dirty || loginForm.value.Username.touched)\" class=\"alert alert-danger\">\n                    \n                <div *ngIf=\"loginForm.value.Username.errors.required\">\n                    Please Input Username\n                </div>\n                <div *ngIf=\"loginForm.value.Username.errors.minlength\">\n                    The minimum length of the Username should be 4 Characters\n                </div>\n                <div *ngIf=\"loginForm.value.Username.errors.forbiddenName\">\n                    No Special Characters Allowed\n                </div>\n            </div>\n            </fieldset>\n            <fieldset class=\"d-flex flex-row\">\n                <input type=\"password\" formControlName=\"Password\" name=\"Password\" id=\"Password\" placeholder=\"Password\">\n            </fieldset>\n            <div class=\"d-flex flex-row quizlogohome\">\n                <button type=\"submit\" value=\"submit\" name=\"l\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { anime } from './assets/lib/anime.es.js';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}